[{"C:\\react\\express\\messanger\\client\\src\\index.js":"1","C:\\react\\express\\messanger\\client\\src\\App.js":"2","C:\\react\\express\\messanger\\client\\src\\reportWebVitals.js":"3","C:\\react\\express\\messanger\\client\\src\\routes.js":"4","C:\\react\\express\\messanger\\client\\src\\pages\\RegisterPage.js":"5","C:\\react\\express\\messanger\\client\\src\\pages\\MessagePage.js":"6","C:\\react\\express\\messanger\\client\\src\\hooks\\http.hook.js":"7","C:\\react\\express\\messanger\\client\\src\\pages\\Messages.js":"8"},{"size":535,"mtime":1655290700051,"results":"9","hashOfConfig":"10"},{"size":332,"mtime":1655297903755,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1655290700365,"results":"12","hashOfConfig":"10"},{"size":623,"mtime":1655291412871,"results":"13","hashOfConfig":"10"},{"size":115,"mtime":1655291133288,"results":"14","hashOfConfig":"10"},{"size":3065,"mtime":1655381705164,"results":"15","hashOfConfig":"10"},{"size":929,"mtime":1655311562921,"results":"16","hashOfConfig":"10"},{"size":860,"mtime":1655383397161,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"19wxlqy",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"C:\\react\\express\\messanger\\client\\src\\index.js",[],[],[],"C:\\react\\express\\messanger\\client\\src\\App.js",[],[],"C:\\react\\express\\messanger\\client\\src\\reportWebVitals.js",[],[],"C:\\react\\express\\messanger\\client\\src\\routes.js",["46"],[],"import React from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { RegisterPage } from \"./pages/RegisterPage\";\nimport { MessagePage } from \"./pages/MessagePage\";\n\nexport const useRoutes = () => {\n  return (\n    <Routes>\n      <Route\n        path=\"/register\"\n        exact\n        element={<RegisterPage></RegisterPage>}\n      ></Route>\n      <Route\n        path=\"/messages\"\n        exact\n        element={<MessagePage></MessagePage>}\n      ></Route>\n        <Route\n            path=\"*\"\n            exact\n            element={<MessagePage></MessagePage>}\n        ></Route>\n    </Routes>\n  );\n};\n","C:\\react\\express\\messanger\\client\\src\\pages\\RegisterPage.js",[],[],"C:\\react\\express\\messanger\\client\\src\\pages\\MessagePage.js",["47","48","49"],[],"import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Row,\n  InputGroup,\n  Form,\n  Button,\n  Modal,\n} from \"react-bootstrap\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { Messages } from \"./Messages\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nconst queryClient = new QueryClient();\n\nexport const MessagePage = () => {\n  const queryClient = new QueryClient();\n  const { request } = useHttp();\n  const d = new Date();\n  const [form, setForm] = useState({\n    title: \"\",\n    user: \"\",\n    date: d.toLocaleTimeString(\"en-US\", { hour12: false }),\n  });\n  const [show, setShow] = useState(true);\n  const [disable, setDisable] = useState(true);\n\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n\n  const addMessageHandler = async () => {\n    try {\n      const data = request(\"/chat/new\", \"POST\", { ...form });\n      setForm({\n        title: \"\",\n        user: form.user,\n        date: d.toLocaleTimeString(\"en-US\", { hour12: false }),\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleDisabled = () => {\n    if (form.user !== \"\") {\n      setDisable(false);\n    }\n  };\n\n  useEffect(() => {\n    handleDisabled();\n  }, [form.user, handleDisabled]);\n\n  const hide = () => setShow(false);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"bg-dark\">\n        <div className=\"text-light h1 text-center mb-5\">ANONYMOUS CHAT</div>\n        <Modal show={show} onHide={hide}>\n          <Modal.Header>\n            <Modal.Title>Enter username</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <InputGroup className=\"\">\n              <Form.Control\n                placeholder=\"Enter username\"\n                aria-label=\"title\"\n                name=\"user\"\n                aria-describedby=\"basic-addon2\"\n                value={form.user}\n                onChange={changeHandler}\n              />\n            </InputGroup>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={hide} disabled={disable}>\n              Save changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Container md={\"10\"}>\n          <Row md=\"10\" className=\"d-flex flex-column\">\n            <Messages form={form}></Messages>\n          </Row>\n          <Row className=\"d-flex flex-row position-fixed bottom-0 w-75 mb-1\">\n            <InputGroup className={\"formCont\"}>\n              <Form.Control\n                placeholder=\"Enter message\"\n                aria-label=\"title\"\n                name=\"title\"\n                aria-describedby=\"basic-addon2\"\n                value={form.title}\n                onChange={changeHandler}\n              />\n              <Button\n                variant=\"primary\"\n                className=\"mx\"\n                onClick={addMessageHandler}\n              >\n                Enter\n              </Button>\n            </InputGroup>\n          </Row>\n        </Container>\n      </div>\n    </QueryClientProvider>\n  );\n};\n","C:\\react\\express\\messanger\\client\\src\\hooks\\http.hook.js",[],[],"C:\\react\\express\\messanger\\client\\src\\pages\\Messages.js",["50","51","52"],[],"import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\n\nconst fetch = () => {\n  return axios.get(\"/chat/get\");\n};\n\nexport const Messages = ({ form }) => {\n  const { isLoading, data, isFetching, error, refetch } = useQuery(\n    \"message\",\n    fetch,\n    {\n        refetchInterval: 5000\n    }\n\n  );\n\n  if (isLoading) {\n    return <h2>Loading</h2>;\n  }\n\n  return (\n    <>\n      {data?.data.map((msg) => {\n        const messageClassName =\n          \"message\" + (msg.user === form.user ? \"-green\" : \"\");\n        return (\n          <div key={msg._id} className={`${messageClassName} my-2 w-25`}>\n            <div className=\"userName mx-3\">{msg.user}</div>\n            <div className=\"mx-4 fs-5\">{msg.title}</div>\n            <div className=\"text-end mx-4\">{msg.date}</div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n",{"ruleId":"53","severity":1,"message":"54","line":2,"column":25,"nodeType":"55","messageId":"56","endLine":2,"endColumn":33},{"ruleId":"53","severity":1,"message":"57","line":13,"column":7,"nodeType":"55","messageId":"56","endLine":13,"endColumn":18},{"ruleId":"53","severity":1,"message":"58","line":34,"column":13,"nodeType":"55","messageId":"56","endLine":34,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":45,"column":9,"nodeType":"61","endLine":49,"endColumn":4},{"ruleId":"53","severity":1,"message":"62","line":10,"column":28,"nodeType":"55","messageId":"56","endLine":10,"endColumn":38},{"ruleId":"53","severity":1,"message":"63","line":10,"column":40,"nodeType":"55","messageId":"56","endLine":10,"endColumn":45},{"ruleId":"53","severity":1,"message":"64","line":10,"column":47,"nodeType":"55","messageId":"56","endLine":10,"endColumn":54},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'queryClient' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'handleDisabled' function makes the dependencies of useEffect Hook (at line 53) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleDisabled' in its own useCallback() Hook.","VariableDeclarator","'isFetching' is assigned a value but never used.","'error' is assigned a value but never used.","'refetch' is assigned a value but never used."]