{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers[\"Content-Type\"] = \"application/JSON\";\n      }\n\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      console.log(response);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Something went wrong\");\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n  const clearError = useCallback(() => setError(null), []);\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"wBqGcGl6EafFNGt940fH8x5vtvA=\");","map":{"version":3,"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","response","fetch","console","log","data","json","ok","Error","message","e","clearError"],"sources":["C:/react/express/messanger/client/src/hooks/http.hook.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setLoading(true);\n      try {\n        if (body) {\n          body = JSON.stringify(body);\n          headers[\"Content-Type\"] = \"application/JSON\";\n        }\n        const response = await fetch(url, { method, body, headers });\n        console.log(response);\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.message || \"Something went wrong\");\n        }\n        setLoading(false);\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, request, error, clearError };\n};\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAMO,OAAO,GAAGN,WAAW,CACzB,gBAAOO,GAAP,EAA0D;IAAA,IAA9CC,MAA8C,uEAArC,KAAqC;IAAA,IAA9BC,IAA8B,uEAAvB,IAAuB;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IACxDP,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACF,IAAIM,IAAJ,EAAU;QACRA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;QACAC,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;MACD;;MACD,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAM;QAAEC,MAAF;QAAUC,IAAV;QAAgBC;MAAhB,CAAN,CAA5B;MACAK,OAAO,CAACC,GAAR,CAAYH,QAAZ;MACA,MAAMI,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;;MACA,IAAI,CAACL,QAAQ,CAACM,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,sBAA1B,CAAN;MACD;;MACDlB,UAAU,CAAC,KAAD,CAAV;MACA,OAAOc,IAAP;IACD,CAbD,CAaE,OAAOK,CAAP,EAAU;MACVnB,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAACiB,CAAC,CAACD,OAAH,CAAR;MACA,MAAMC,CAAN;IACD;EACF,CArBwB,EAsBzB,EAtByB,CAA3B;EAwBA,MAAMC,UAAU,GAAGvB,WAAW,CAAC,MAAMK,QAAQ,CAAC,IAAD,CAAf,EAAuB,EAAvB,CAA9B;EAEA,OAAO;IAAEH,OAAF;IAAWI,OAAX;IAAoBF,KAApB;IAA2BmB;EAA3B,CAAP;AACD,CA9BM;;GAAMtB,O"},"metadata":{},"sourceType":"module"}